version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  required:
    - github_tron_tektondefinitions
    - github_tektoncatalog
    - git_operator
    - private_worker
    - slack
    - pipeline09
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")    
toolchain:
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
  name: >
    $env.source_provider == 'github_integrated' ? "ansible-tron-example-operator-ci_cd-{{timestamp}}" : "ansible-memcached-operator-ci_cd-{{timestamp}}"
services:
  # operator repository
  git_operator:
    service_id: >
      $env.source_provider ? $env.source_provider : 'githubconsolidated'
    parameters:
      repo_name: memcached-operator-sample
      type: link
      repo_url: >
        $env.source_provider == 'github_integrated' ?
          "https://github.ibm.com/jaunin-b/tron-example-operator" : "https://github.com/jauninb/memcached-operator-sample.git"
      has_issues: false
      enable_traceability: false
      legal: true
  # operator configurations deployment repository
  git_operator_configs:
    service_id: >
      $env.source_provider ? $env.source_provider : 'githubconsolidated'
    parameters:
      repo_name: demo-operator-configs
      type: link
      repo_url: > 
        $env.source_provider == 'github_integrated' ?
          "https://github.ibm.com/watson-deploy-configs/demo-operator-configs.git" : "https://github.com/jauninb/tron-operator-toolchain-template"
      has_issues: false
      enable_traceability: false
      legal: true
  # tekton definitions
  github_tektoncatalog:
    parameters:
      type: link
      repo_url: https://github.com/open-toolchain/tekton-catalog.git
      has_issues: false
      enable_traceability: false
      repo_name: tekton-catalog
    service_id: githubconsolidated
  github_tron_tektondefinitions:
    parameters:
      type: link
      legal: true
      owner_id: jaunin-b
      repo_name: tron-operator-tekton-definitions
      repo_url: https://github.ibm.com/jaunin-b/tron-operator-tekton-definitions.git
      has_issues: false
      enable_traceability: false
    service_id: github_integrated
  slack:
    service_id: slack
  devops_insights:
    service_id: draservicebroker
  private_worker:
    service_id: private_worker
  pipeline09:
    parameters:
      type: tekton
      name: ansible-operator-cicd
      ui_pipeline: false
      configuration:
        env:
          github_tron_tektondefinitions: github_tron_tektondefinitions
          github_tektoncatalog: github_tektoncatalog
          git_operator: git_operator
          git_operator_configs: git_operator_configs
          operator_repository_url: "{{services.git_operator.parameters.repo_url}}"
          operator_configs_repository_url: "{{services.git_operator_configs.parameters.repo_url}}"
          private_worker: "{{services.private_worker.parameters.name}}"
          operator-name: "{{form.pipeline.parameters.operator-name}}"
          helm-chart-name: "{{form.pipeline.parameters.helm-chart-name}}"
          ansible-roles-path: "{{form.pipeline.parameters.ansible-roles-path}}"
          molecule-scenario-ci-test: "{{form.pipeline.parameters.ci-molecule-scenario}}"
          molecule-scenario-cd-test: "{{form.pipeline.parameters.cd-molecule-scenario}}"
          artifactory-server-url: "{{form.pipeline.parameters.artifactory-server-url}}"
          artifactory-repository: "{{form.pipeline.parameters.artifactory-repository}}"
          artifactory-repository-path: "{{form.pipeline.parameters.artifactory-repository-path}}"
          artifactory-api-key: "{{form.pipeline.parameters.artifactory-api-key}}"
          artifactory-username: "{{form.pipeline.parameters.artifactory-username}}"
          toolchain-api-key: "{{form.pipeline.parameters.toolchain-api-key}}"
          api-key: "{{form.pipeline.parameters.api-key}}"
          registry-region: "{{form.pipeline.parameters.registry-region}}"
          registry-namespace: "{{form.pipeline.parameters.registry-namespace}}"
          deploy-region: "{{form.pipeline.parameters.deploy-region}}"
          deploy-resource-group: "{{form.pipeline.parameters.deploy-resource-group}}"
          deploy-cluster-name: "{{form.pipeline.parameters.deploy-cluster-name}}"
          deploy-namespace: "{{form.pipeline.parameters.deploy-cluster-namespace}}"
          set-up-script: "{{form.pipeline.parameters.set-up-script}}"
          tear-down-script: "{{form.pipeline.parameters.tear-down-script}}"
        content:
          $text: pipeline_cicd.yml
      services:
        - github_tron_tektondefinitions
        - github_tektoncatalog
        - git_operator
        - git_operator_configs
        - private_worker
    service_id: pipeline
form:
  pipeline:
    parameters:
      operator-name: > 
        $env.source_provider == 'github_integrated' ? "tron-operator" : "memcached-operator"
      ansible-roles-path: > 
        $env.source_provider == 'github_integrated' ? "./playbooks/roles" : "./roles/Memcached"
      helm-chart-name: > 
        $env.source_provider == 'github_integrated' ? "crd-bjn-operator-chart" : "memcached-operator-chart"
      deploy-cluster-namespace: tron
      artifactory-server-url: "https://na.artifactory.swg-devops.com/artifactory"
      artifactory-repository: "wcp-watson-core-incubator-helm-virtual"
      artifactory-repository-path: "tron/jauninb"
      artifactory-username: ""
      ci-molecule-scenario: > 
        $env.source_provider == 'github_integrated' ? "unit-tests" : "test-local"
      cd-molecule-scenario: test-cluster
      set-up-script: > 
        $env.source_provider == 'github_integrated' ? "scripts/set-up.sh test-templates" : ""
      tear-down-script: > 
        $env.source_provider == 'github_integrated' ? "scripts/tear-down.sh" : ""
    schema:
      $ref: cicd_ui.json
